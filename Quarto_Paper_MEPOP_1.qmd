---
title: "Paper_MEPOP_1"
author: "Pedro Fierro"
format: html
editor: visual
---

# The Impact of Political Campaigns on Affection: The Case of the First Chilean Constitutional Process (2022)

Authors: Pedro Fierro, Claudia Ramírez, Andrés Sherman, Sebastián Rivera y Magdalena Saldaña

† Este documento es para compartir ideas y tener acceso al código que estamos ocupando.

## Environment

### Preparing our environment (loading libraries).

```{r results='hide', message=FALSE, warning=FALSE}
library(haven)
library(knitr)
library(lattice)
library(tidyverse)
library(here)
library(flextable)
library(devtools)
library(lavaan)
library(ggplot2)
library(plm)
library(naniar)
library(purrr)
library(psych)
library(interactions)
library(semPlot)
```

## Cross-Sectional Approach

### Importing data and creating variables

```{r  results='hide', message=FALSE, warning=FALSE}
#Import Data

data_w1 <- read_sav("Data_W1.sav")

# ID
data_w1$id <- data_w1$CodPanelista

# Age
data_w1$age_num <- data_w1$age

# Socioeconomic Status
data_w1$ses <- data_w1$RECO_NSE

# Education
data_w1$educ <- data_w1$P60

# Sex (1=women)
data_w1 <- data_w1%>%
  mutate(sex = ifelse(SEX == 2, 1,
                      ifelse(SEX == 1, 0, NA)))

# Ideology
data_w1$ideology <- ifelse(data_w1$P32 == 99, NA, data_w1$P32)

# Online Political Efficacy
data_w1$ope1 <- data_w1$P59_1
data_w1$ope2 <- data_w1$P59_2
data_w1$ope3 <- data_w1$P59_3
data_w1$ope4 <- data_w1$P59_4

# External Political Efficacy (recode)
data_w1$extef1 <- data_w1$P58_1
data_w1$extef2 <- data_w1$P58_2
data_w1$extef3 <- data_w1$P58_3

# To recode efficacies (intef1, intef3, extef1, extef3, extef4)
data_w1 <- data_w1 %>%
  mutate(across(c(extef1, extef2, extef3), ~ 6 - .x))

# Internal Political Efficacy
data_w1$intef1 <- data_w1$P58_4
data_w1$intef2 <- data_w1$P58_5
data_w1$intef3 <- data_w1$P58_6

# Media Exposure
data_w1$tv <- data_w1$P4_1
data_w1$cable <- data_w1$P4_2
data_w1$newspaper <- data_w1$P4_3
data_w1$radio <- data_w1$P4_4
data_w1$tradonline <- data_w1$P4_5
data_w1$online <- data_w1$P4_6
data_w1$podcast <- data_w1$P4_7
data_w1$officialsm <- data_w1$P4_8

# Social Media Exposure
data_w1$fb <- ifelse(data_w1$P5_1 == 99, NA, data_w1$P5_1)
data_w1$insta <- ifelse(data_w1$P5_2 == 99, NA, data_w1$P5_2)
data_w1$twitter <- ifelse(data_w1$P5_3 == 99, NA, data_w1$P5_3)
data_w1$whatsapp <- ifelse(data_w1$P5_4 == 99, NA, data_w1$P5_4)
data_w1$youtube <- ifelse(data_w1$P5_5 == 99, NA, data_w1$P5_5)
data_w1$tiktok <- ifelse(data_w1$P5_6 == 99, NA, data_w1$P5_6)
data_w1$discord <- ifelse(data_w1$P5_7 == 99, NA, data_w1$P5_7)
data_w1$twitch <- ifelse(data_w1$P5_8 == 99, NA, data_w1$P5_8)

# Franja Exposure
data_w1$franja <- data_w1$P6_1

# Social Media Political Use
data_w1$use1 <- data_w1$P25_5
data_w1$use2 <- data_w1$P25_6
data_w1$use3 <- data_w1$P25_7
data_w1$use4 <- data_w1$P25_8
data_w1$use5 <- data_w1$P25_9
data_w1$use6 <- data_w1$P25_10
data_w1$use7 <- data_w1$P25_11

# Interest
data_w1$polint <- data_w1$P21
data_w1$procint <- data_w1$P22
data_w1$plebint <- data_w1$P23
```

### Checking the new variables

```{r message=FALSE, warning=FALSE}
describe(data_w1$age_num)
table(data_w1$ses)
table(data_w1$educ)
table(data_w1$SEX)
table(data_w1$sex)
table(data_w1$ideology)

table(data_w1$ope1)
table(data_w1$ope2)
table(data_w1$ope3)
table(data_w1$ope4)

table(data_w1$extef1)
table(data_w1$extef2)
table(data_w1$extef3)

table(data_w1$intef1)
table(data_w1$intef2)
table(data_w1$intef3)

table(data_w1$tv)
table(data_w1$cable)
table(data_w1$newspaper)
table(data_w1$radio)
table(data_w1$tradonline)
table(data_w1$online)
table(data_w1$podcast)
table(data_w1$officialsm)

table(data_w1$fb)
table(data_w1$insta)
table(data_w1$twitter)
table(data_w1$whatsapp)
table(data_w1$youtube)
table(data_w1$tiktok)
table(data_w1$discord)
table(data_w1$twitch)

table(data_w1$franja)

table(data_w1$polint)
table(data_w1$procint)
table(data_w1$plebint)


```

## Creating Factors

### Reliability Test

```{r results='hide', message=FALSE, warning=FALSE}
cronbach_ope <- alpha(na.omit(data_w1[c("ope1", "ope2", "ope3", "ope4")]))
cronbach_ope

cronbach_intef <- alpha(na.omit(data_w1[c("intef1", "intef2", "intef3")]))
cronbach_intef

cronbach_extef <- alpha(na.omit(data_w1[c("extef1", "extef2", "extef3")]))
cronbach_extef

cronbach_media <- alpha(na.omit(data_w1[c("tv", "cable", "newspaper", "radio", "tradonline", "online", "podcast", "officialsm")]))
cronbach_media

cronbach_social <- alpha(na.omit(data_w1[c("fb", "insta", "twitter", "whatsapp", "youtube", "tiktok", "discord", "twitch")]))
cronbach_social

cronbach_interest <- alpha(na.omit(data_w1[c("polint", "procint", "plebint")]))
cronbach_interest

cronbach_poluse <- alpha(na.omit(data_w1[c("use1", "use2", "use3", "use4", "use5", "use6", "use7")]))
cronbach_poluse
```

### Confirmatory Factor Analysis

```{r results='hide', message=FALSE, warning=FALSE}
data_w1_na <- na.omit(data_w1[c("id", "polint", "procint", "plebint", "ope1", "ope2", "ope3", "ope4", "intef1", "intef2", "intef3", "extef1", "extef2", "extef3", "tv", "cable", "newspaper", "radio", "tradonline", "online", "podcast", "officialsm","fb", "insta", "twitter", "whatsapp", "youtube", "tiktok", "discord", "twitch", "franja", "use1", "use2", "use3", "use4", "use5", "use6", "use7", "age_num", "ses", "sex", "educ")])
sum(is.na(data_w1_na))

data_w1_na <- data_w1_na %>%
  mutate(across(where(is.labelled), as.numeric))

cfa.model <- 'ope =~ ope1 + ope2 + ope3 + ope4
              intef =~ intef1 + intef2 + intef3
              extef =~ extef1 + extef2 + extef3
              media =~ tv + cable + newspaper + radio + tradonline + online + podcast + officialsm
              social =~ fb + insta + twitter + whatsapp + youtube + tiktok + discord + twitch
              interest =~ polint + procint + plebint
              poluse =~ use1 + use2 + use3 + use4 + use5 + use6 + use7'


fit_cfa <- cfa(cfa.model, data = data_w1_na)
latent_scores <- predict(fit_cfa)

data_w1_scores <- cbind(data_w1_na, latent_scores)
```

## Cross-sectional Analysis

Para estos modelos, debiésemos pensar si incluir o no political interest como control. Yo acá las incluí, pero no estoy seguro. Creo que "teóricamente" sería sensato no incluirla, porque puede esconder parte del efecto (multicolinealidad ¿?)

### OLSE for Online Political Efficacy

Media Exposure on OPE

```{r}
ols_ope1 <- lm(ope ~ age_num + ses + educ + sex + interest + media, data = data_w1_scores)
summary(ols_ope1)
```

Social Media Exposure on OPE

```{r}
ols_ope2 <- lm(ope ~ age_num + ses + educ + sex + interest + social, data = data_w1_scores)
summary(ols_ope2)
```

Franja Exposure on OPE

```{r}
ols_ope3 <- lm(ope ~ age_num + ses + educ + sex + interest + franja, data = data_w1_scores)
summary(ols_ope3)
```

Social Media Political Use on OPE

```{r}
ols_ope4 <- lm(ope ~ age_num + ses + educ + sex + interest + poluse, data = data_w1_scores)
summary(ols_ope4)
```

### OLSE for Internal Efficacy

Media Exposure on IPE

```{r}
ols_intef1 <- lm(intef ~ age_num + ses + educ + sex + interest + media, data = data_w1_scores)
summary(ols_intef1)
```

Social Media Exposure on IPE

```{r}
ols_intef2 <- lm(intef ~ age_num + ses + educ + sex + interest + social, data = data_w1_scores)
summary(ols_intef2)
```

Franja Exposure on IPE

```{r}
ols_intef3 <- lm(intef ~ age_num + ses + educ + sex + interest + franja, data = data_w1_scores)
summary(ols_intef3)
```

Social Media Political Use on IPE

```{r}
ols_intef4 <- lm(intef ~ age_num + ses + educ + sex + interest + poluse, data = data_w1_scores)
summary(ols_intef4)
```

### OLSE for External Efficacy

Media Exposure on EPE

```{r}
ols_extef1 <- lm(extef ~ age_num + ses + educ + sex + interest + media, data = data_w1_scores)
summary(ols_extef1)
```

Social Media Exposure on EPE

```{r}
ols_extef2 <- lm(extef ~ age_num + ses + educ + sex + interest + social, data = data_w1_scores)
summary(ols_extef2)
```

Franja Exposure on EPE

```{r}
ols_extef3 <- lm(extef ~ age_num + ses + educ + sex + interest + franja, data = data_w1_scores)
summary(ols_extef3)
```

Social Media Political Use on EPE

```{r}
ols_extef4 <- lm(extef ~ age_num + ses + educ + sex + interest + poluse, data = data_w1_scores)
summary(ols_extef4)
```

## Longitudinal Approach

### Importing data and creating variables

```{r results='hide', message=FALSE, warning=FALSE}
#Import Data
data_w3 <- read_sav("Data_W3.sav")

# ID
data_w3$id <- data_w3$CodPanelista

# Age
data_w3$age_num <- data_w3$age

# Socioeconomic Status
data_w3$ses <- data_w3$RECO_NSE

# Sex (1=women)

data_w3 <- data_w3%>%
  mutate(sex = ifelse(SEX == 2, 1,
                      ifelse(SEX == 1, 0, NA)))

# Ideology
data_w3$ideology <- ifelse(data_w3$P32 == 99, NA, data_w3$P32)

# Social Media Political Use
data_w3$use1 <- data_w3$P25_5
data_w3$use2 <- data_w3$P25_6
data_w3$use3 <- data_w3$P25_7
data_w3$use4 <- data_w3$P25_8
data_w3$use5 <- data_w3$P25_9
data_w3$use6 <- data_w3$P25_10
data_w3$use7 <- data_w3$P25_11

# Online Political Efficacy
data_w3$ope1 <- data_w3$P59_1
data_w3$ope2 <- data_w3$P59_2
data_w3$ope3 <- data_w3$P59_3
data_w3$ope4 <- data_w3$P59_4

# External Political Efficacy (recode)
data_w3$extef1 <- data_w3$P58_1
data_w3$extef2 <- data_w3$P58_2
data_w3$extef3 <- data_w3$P58_3

# To recode efficacies (intef1, intef3, extef1, extef3, extef4)
data_w3 <- data_w3 %>%
  mutate(across(c(extef1, extef2, extef3), ~ 6 - .x))

# Internal Political Efficacy
data_w3$intef1 <- data_w3$P58_4
data_w3$intef2 <- data_w3$P58_5
data_w3$intef3 <- data_w3$P58_6

```

### Checking the new variables

```{r message=FALSE, warning=FALSE}
describe(data_w3$age_num)
table(data_w3$ses)
table(data_w3$SEX)
table(data_w3$sex)

table(data_w3$P32)
table(data_w3$ideology)

table(data_w3$ope1)
table(data_w3$ope2)
table(data_w3$ope3)
table(data_w3$ope4)

table(data_w3$extef1)
table(data_w3$extef2)
table(data_w3$extef3)

table(data_w3$intef1)
table(data_w3$intef2)
table(data_w3$intef3)
```

### Creating Long Dataset

```{r results='hide', message=FALSE, warning=FALSE}
# Subset the necessary variables
data_w1_selec <- data_w1 %>% select(id, ope1, ope2, ope3, ope4, intef1, intef2, intef3, extef1, extef2, extef3, use1, use2, use3, use4, use5, use6, use7, sex, ses, age_num, ideology)

data_w3_selec <- data_w3 %>% select(id, ope1, ope2, ope3, ope4, intef1, intef2, intef3, extef1, extef2, extef3, use1, use2, use3, use4, use5, use6, use7, sex, ses, age_num, ideology)

# Find common ids in both datasets
common_ids <- intersect(data_w1_selec$id, data_w3_selec$id)

# Filter both data frames to include only those ids
data_w1_selec <- data_w1_selec %>% filter(id %in% common_ids)
data_w3_selec <- data_w3_selec %>% filter(id %in% common_ids)

# Add a wave identifier
data_w1_selec$wave <- 1
data_w3_selec$wave <- 2

# Combine the datasets into a long format
data_long <- rbind(data_w1_selec, data_w3_selec)

# Check the first few rows of the combined dataset
head(data_long)

# Check the distribution of data across waves
table(data_long$wave)
```

## Reliability Test for Long Dataset

```{r results='hide', message=FALSE, warning=FALSE}
cronbach_ope_long <- alpha(na.omit(data_long[c("ope1", "ope2", "ope3", "ope4")]))
cronbach_ope_long

cronbach_intef_long <- alpha(na.omit(data_long[c("intef1", "intef2", "intef3")]))
cronbach_intef_long

cronbach_extef_long <- alpha(na.omit(data_long[c("extef1", "extef2", "extef3")]))
cronbach_extef_long

cronbach_poluse_long <- alpha(na.omit(data_long[c("use1", "use2", "use3", "use4", "use5", "use6", "use7")]))
cronbach_poluse_long
```

### Creating Latent Variables for Long Dataset

```{r results='hide', message=FALSE, warning=FALSE}
data_long <- data_long %>%
  mutate(across(where(is.labelled), as.numeric))

cfa.model_long <- 'ope =~ ope1 + ope2 + ope3 + ope4
                intef =~ intef1 + intef2 + intef3
                extef =~ extef1 + extef2 + extef3
                poluse =~ use1 + use2 + use3 + use4 + use5 + use6 + use7'

fit_cfa_long <- cfa(cfa.model_long, data = data_long)
latent_scores_long <- predict(fit_cfa_long)

data_long_scores <- cbind(data_long, latent_scores_long)

# Plot the CFA model
semPaths(fit_cfa_long, "std", layout = "tree", rotation = 2,
         whatLabels = "std", edge.label.cex = 0.8,
         sizeMan = 3, sizeLat = 7, title = TRUE)

```

### Converting to Panel Dataset

```{r results='hide', message=FALSE, warning=FALSE}
# Convert your data to a panel data frame
pdata <- pdata.frame(data_long_scores, index = c("id", "wave"))
```

### Panel Regression for OPE

Primero, estimamos dos modelos, uno con efectos fijos (FE) y otros con random effects (RA). Luego de estimar el test de Hausman (p-value \> 0,05), decidimos reportar el modelo con random effects:

```{r}
# Fit a random effects model
model_re_ope <- plm(ope ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "random")

# Fit a FE model
model_fe_ope <- plm(ope ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "within")

# Perform the Hausman test
hausman_test_ope <- phtest(model_fe_ope, model_re_ope)

# Print the results of the Hausman test
print(hausman_test_ope)

# Summary of the random effects model
summary(model_re_ope)

```

### Panel Regression for IPE

Primero, estimamos dos modelos, uno con efectos fijos (FE) y otros con random effects (RA). Luego de estimar el test de Hausman (p-value \< 0,05), decidimos reportar el modelo con efectos fijos:

```{r}
# Fit a random effects model
model_re_intef <- plm(intef ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "random")

# Fit a fixed effects model
model_fe_intef <- plm(intef ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "within")

# Perform the Hausman test
hausman_test_intef <- phtest(model_fe_intef, model_re_intef)

# Print the results of the Hausman test
print(hausman_test_intef)

# Summary of the random effects model
summary(model_fe_intef)

```

### Panel Regression for EPE

Primero, estimamos dos modelos, uno con efectos fijos (FE) y otros con random effects (RA). Luego de estimar el test de Hausman (p-value \> 0,05), decidimos reportar el modelo con random effects:

```{r}
# Fit a random effects model
model_re_extef <- plm(extef ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "random")

# Fit a fixed effects model
model_fe_extef <- plm(extef ~ poluse + ideology + ses + sex + age_num, data = pdata, model = "within")

# Perform the Hausman test
hausman_test_extef <- phtest(model_fe_extef, model_re_extef)

# Print the results of the Hausman test
print(hausman_test_extef)

# Summary of the random effects model
summary(model_re_extef)

```

## What's next

Esta es mi primera vez analizando datos panel, entonces me quedé con dudas sobre la parte panel regression.

1.  Incluí variables sociodemográficas como control, pero son variables constantes en ambas olas... Creo que no está del todo correcto incluirlas, quizás es mejor estimar panel regression con FE.

2.  Hay que ver cómo reportar el R-squared within, between y overall. Parece ser clave para interpretar los resultados del panel regression, pero no es algo que el código reporte por defecto.

## Appendix Analyses With a Balanced Panel

En este apéndice testeamos los modelos pero, antes, balanceamos el panel En los modelos reportados antes, la muestra seguía desbalanceada, probablemente por casos que tenían NAs en algunas de las variables y algunas de las olas. Los resultados utilizando el panel balaneado son iguales.

```{r}
# Subset and check for complete cases in each wave
data_w1_complete <- data_w1 %>%
  select(id, ope1, ope2, ope3, ope4, intef1, intef2, intef3, extef1, extef2, extef3, use1, use2, use3, use4, use5, use6, use7, sex, ses, age_num, ideology) %>%
  filter(complete.cases(.))

data_w3_complete <- data_w3 %>%
  select(id, ope1, ope2, ope3, ope4, intef1, intef2, intef3, extef1, extef2, extef3, use1, use2, use3, use4, use5, use6, use7, sex, ses, age_num, ideology) %>%
  filter(complete.cases(.))

# Find common ids that are complete in both datasets
common_ids_complete <- intersect(data_w1_complete$id, data_w3_complete$id)

# Filter both data frames to include only those complete ids
data_w1_selec <- data_w1_complete %>% filter(id %in% common_ids_complete)
data_w3_selec <- data_w3_complete %>% filter(id %in% common_ids_complete)

# Add a wave identifier
data_w1_selec$wave <- 1
data_w3_selec$wave <- 2

# Combine the datasets into a long format
data_long_complete <- rbind(data_w1_selec, data_w3_selec)

# Check the first few rows of the combined dataset
head(data_long_complete)

# Check the distribution of data across waves
table(data_long_complete$wave)
```

```{r}
data_long_complete <- data_long_complete %>%
  mutate(across(where(is.labelled), as.numeric))

cfa.model_long_complete <- 'ope =~ ope1 + ope2 + ope3 + ope4
                intef =~ intef1 + intef2 + intef3
                extef =~ extef1 + extef2 + extef3
                poluse =~ use1 + use2 + use3 + use4 + use5 + use6 + use7'

fit_cfa_long_complete <- cfa(cfa.model_long_complete, data = data_long_complete)
latent_scores_long_complete <- predict(fit_cfa_long_complete)

data_long_complete_scores <- cbind(data_long_complete, latent_scores_long_complete)

# Convert your data to a panel data frame
pdata_complete <- pdata.frame(data_long_complete_scores, index = c("id", "wave"))

```

Panel Regressions OPE

```{r}
# Fit a random effects model
model_re_ope_bal <- plm(ope ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "random")

# Fit a FE model
model_fe_ope_bal <- plm(ope ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "within")

# Perform the Hausman test
hausman_test_ope_bal <- phtest(model_fe_ope_bal, model_re_ope_bal)

# Print the results of the Hausman test
print(hausman_test_ope_bal)

# Summary of the random effects model
summary(model_re_ope_bal)
```

Panel Regressions IPE

```{r}
# Fit a random effects model
model_re_intef_bal <- plm(intef ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "random")

# Fit a fixed effects model
model_fe_intef_bal <- plm(intef ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "within")

# Perform the Hausman test
hausman_test_intef_bal <- phtest(model_fe_intef_bal, model_re_intef_bal)

# Print the results of the Hausman test
print(hausman_test_intef_bal)

# Summary of the random effects model
summary(model_fe_intef_bal)
```

```{r}
# Fit a random effects model
model_re_extef_bal <- plm(extef ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "random")

# Fit a fixed effects model
model_fe_extef_bal <- plm(extef ~ poluse + ideology + ses + sex + age_num, data = pdata_complete, model = "within")

# Perform the Hausman test
hausman_test_extef_bal <- phtest(model_fe_extef_bal, model_re_extef_bal)

# Print the results of the Hausman test
print(hausman_test_extef_bal)

# Summary of the random effects model
summary(model_re_extef_bal)
```
